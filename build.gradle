apply plugin: 'groovy'

sourceSets {
    jobs {
        groovy {
            srcDirs 'jobs'
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

repositories {
    maven { url 'http://bits.netbeans.org/maven2' }
    maven { url 'http://repo.jenkins-ci.org/releases/' }
    jcenter()
    mavenCentral()
}

configurations {
    testPlugins {}
}

def defaultJenkinsPluginHost = 'org.jenkins-ci.plugins'

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile "${defaultJenkinsPluginHost}:job-dsl-core:${jobDslVersion}"

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:2.2.2' // used by Spock

    // Jenkins test harness dependencies
    testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.8'
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}:war-for-test@jar"

    // Job DSL plugin including plugin dependencies
    testCompile "${defaultJenkinsPluginHost}:job-dsl:${jobDslVersion}"
    testCompile "${defaultJenkinsPluginHost}:job-dsl:${jobDslVersion}@jar"
    testCompile "${defaultJenkinsPluginHost}:structs:1.14@jar"
    testCompile "${defaultJenkinsPluginHost}:cloudbees-folder:5.12@jar"

    // plugins to install in test instance
    testPlugins "${defaultJenkinsPluginHost}:ansicolor:0.4.3"
    testPlugins "${defaultJenkinsPluginHost}:build-name-setter:1.6.5"
    testPlugins "${defaultJenkinsPluginHost}:build-timeout:1.18"
    testPlugins "${defaultJenkinsPluginHost}:conditional-buildstep:1.3.5"
    testPlugins "${defaultJenkinsPluginHost}:credentials-binding:1.10"
    testPlugins "${defaultJenkinsPluginHost}:ghprb:1.33.4"
    testPlugins "${defaultJenkinsPluginHost}:git:3.0.1"
    testPlugins 'com.coravy.hudson.plugins.github:github:1.25.0'
    testPlugins "${defaultJenkinsPluginHost}:github-api:1.80"
    testPlugins "${defaultJenkinsPluginHost}:htmlpublisher:1.11"
    testPlugins "${defaultJenkinsPluginHost}:junit:1.19"
    testPlugins "${defaultJenkinsPluginHost}:multiple-scms:0.6"
    testPlugins "${defaultJenkinsPluginHost}:nodelabelparameter:1.7.2"
    testPlugins "${defaultJenkinsPluginHost}:parameterized-trigger:2.32"
    testPlugins "${defaultJenkinsPluginHost}:postbuildscript:0.17"
    testPlugins "${defaultJenkinsPluginHost}:slack:2.1"
    testPlugins "${defaultJenkinsPluginHost}:throttle-concurrents:1.9.0"
    testPlugins "${defaultJenkinsPluginHost}:timestamper:1.8.7"
    testPlugins "${defaultJenkinsPluginHost}:ws-cleanup:0.32"
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'

    doLast {
        def baseNames = source.collect { it.name[0..it.name.lastIndexOf('.')-1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

task( console, dependsOn: "classes", type: JavaExec ) {
    main = "groovy.ui.Console"
    classpath = sourceSets.main.runtimeClasspath
}
